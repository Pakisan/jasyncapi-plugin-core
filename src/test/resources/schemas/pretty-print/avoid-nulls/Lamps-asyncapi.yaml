asyncapi: "2.0.0"
defaultContentType: "application/json"
info:
  title: "Lamps API"
  version: "1.0.0"
  description: "Recive real-time information about lamps"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0"
servers:
  production:
    url: "api.streetlights.smartylighting.com:{port}"
    protocol: "mqtt"
    description: "Test broker"
    variables:
      port:
        description: "Secure connection (TLS) is available through port 8883."
        enum:
        - "1883"
        - "8883"
        default: "1883"
    security:
    - apiKey: []
    - supportedOauthFlows:
      - "streetlights:on"
      - "streetlights:off"
      - "streetlights:dim"
    - openIdConnectWellKnown: []
channels:
  smartylighting/lamps/1/0/event/{lampId}/info:
    description: "The topic on which lamp info may be produced and consumed."
    subscribe:
      operationId: "receiveLampInfo"
      summary: "Receive information about lamp."
      traits:
      - $ref: "#/components/operationTraits/kafka"
      message:
        $ref: "#/components/messages/lampInfo"
    parameters:
      lampId:
        $ref: "#/components/parameters/lampId"
components:
  schemas:
    lampInfoPayload:
      type: "object"
      properties:
        lumens:
          description: "Lamp intensity measured in lumens."
          type: "integer"
          minimum: 0
        watts:
          description: "Lamp watt consumption."
          type: "integer"
          maximum: 100
          minimum: 0
  messages:
    lampInfo:
      payload:
        $ref: "#/components/schemas/lampInfoPayload"
      contentType: "application/json"
      name: "lampInfo"
      title: "Lamp info"
      summary: "Lamp information."
      traits:
      - $ref: "#/components/messageTraits/commonHeaders"
  securitySchemes:
    apiKey:
      type: "apiKey"
      description: "Provide your API key as the user and leave the password empty."
      in: "user"
  parameters:
    lampId:
      description: "The ID of the lamp."
      schema:
        type: "string"
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId: "my-app-id"
  messageTraits:
    commonHeaders:
      headers:
        type: "object"
        properties:
          my-app-header:
            type: "integer"
            maximum: 100
            minimum: 0
